language core;

extend with #sum-types;
extend with #pairs;
extend with #type-reconstruction;

fn g(x : auto) -> auto {
  return match x {
      inl(n) => succ(n)
    | inr(f) => f(f(succ(0))) 
  }
}

fn main(x : auto) -> auto {
  return g(inr(fn(n : auto) { return g(inl(n)) }))
}
