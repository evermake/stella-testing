language core;

fn twice(f : fn(Nat) -> Nat) -> fn(Nat) -> Nat {
  return fn(n : Nat) {
    return (if Nat::iszero(n) then f(n) else f(f(n)))(n)
  }
}

fn main(n : Nat) -> Nat {
  return twice( fn(x : Nat){ return n } )(n)
}