language core;
extend with #type-cast-patterns, #structural-subtyping, #top-type, #sum-types;

fn isFalseOrZero(x : Top) -> Bool {
  return match x {
      inl(n) cast as Nat + Bool => Nat::iszero(n)
    | b cast as Bool => if b then false else true
    | default => false
  }
}

fn main(n : Nat) -> Bool {
  return isFalseOrZero(n)
}
